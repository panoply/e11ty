var f=(s,t,r)=>new Promise((n,e)=>{var o=i=>{try{a(r.next(i))}catch(c){e(c)}},l=i=>{try{a(r.throw(i))}catch(c){e(c)}},a=i=>i.done?n(i.value):Promise.resolve(i.value).then(o,l);a((r=r.apply(s,t)).next())});import A from"fast-glob";import{statSync as P,readFileSync as x}from"fs";import{access as V,mkdir as E,writeFile as G}from"fs/promises";import{resolve as C,join as v,dirname as I}from"path";import k from"svg-sprite";import K from"vinyl";var j=Object.assign||((s,t)=>(t&&Object.keys(t).forEach(r=>s[r]=t[r]),s)),S=(s,t,r)=>{let n=typeof r;if(r&&n==="object")if(Array.isArray(r))for(let e of r)t=S(s,t,e);else for(let e of Object.keys(r)){let o=r[e];typeof o=="function"?t[e]=o(t[e],h):o===void 0?s&&!isNaN(e)?t.splice(e,1):delete t[e]:o===null||typeof o!="object"||Array.isArray(o)?t[e]=o:typeof t[e]=="object"?t[e]=o===t[e]?o:h(t[e],o):t[e]=S(!1,{},o)}else n==="function"&&(t=r(t,h));return t},h=(s,...t)=>{let r=Array.isArray(s);return S(r,r?s.slice():j({},s),t)},b=h;function O(s){return f(this,null,function*(){try{return yield V(s),!0}catch(t){return!1}})}function D(s,t){return f(this,null,function*(){try{let r=I(s);(yield O(r))||(yield E(r,{recursive:!0})),yield G(s,t)}catch(r){throw new Error(r)}})}function F(s){let t=Object.create(null),r=C(s.inputPath),n=s.outputPath?C(s.outputPath):null,{spriteShortCode:e,spriteConfig:o,inputPath:l}=s;function a(){return f(this,null,function*(){let i=yield A("**/*.svg",{cwd:r}),c=i.map(p=>`${p}:${P(v(r,p)).mtimeMs}`).join("|");if(e in t){if(t[e].cacheKey===c)return t[e].spriteContent;t[e].cacheKey=c}else t[e]={cacheKey:c};let d=new k(o);i.forEach(p=>{let y=v(r,p),m=new K({path:v(r,p),base:r,contents:x(y)});d.add(m)});function g(p){return f(this,null,function*(){return new Promise((y,m)=>d.compile(p,(w,$)=>{if(w)return m(w);y($.symbol.sprite)}))})}let u=yield g(o.mode);n&&(console.info(`[svg-sprite] Writing ${n} from ${l}`),yield D(n,u.contents.toString("utf8"))),t[e].spriteContent=['<div style="width: 0; height: 0; position: absolute; overflow: hidden;">',u.contents.toString("utf8"),"</div>"].join("")})}return{compile:a,getSprite:(i=e)=>t[i].spriteContent}}var N=0;function R(s,t){if(!t)return;Array.isArray(t)||(t=[t]);let r=[];for(let n of t){if(!n.inputPath)throw new Error("[svg-sprite] inputPath must be specified in plugin options");let e=b({inputPath:"",outputPath:"",globalClass:"",defaultClass:"",spriteShortCode:"sprite",svgShortCode:"svg",spriteConfig:{mode:{symbol:{inline:!0,sprite:"sprite.svg",example:!1}},shape:{transform:["svgo"],id:{generator:"svg-%s"}},svg:{xmlDeclaration:!1,doctypeDeclaration:!1}}},n);if(r.includes(e.spriteShortCode))throw new Error("[svg-sprite] illegal to have duplicate svgSpriteShortcode in config list");r.push(e.spriteShortCode);let o=F(e);s.on("eleventy.before",()=>f(this,null,function*(){yield o.compile()})),s.addShortcode(e.spriteShortCode,()=>o.getSprite(e.spriteShortCode)||""),s.addShortcode(e.svgShortCode,(l,a,i)=>{if(!l)throw new Error("[svg-sprite] name of SVG must be specified");let c=l,d=`${e.globalClass} ${a||e.defaultClass}`,g=i||`${c} icon`,u=(N++).toString(36);return[`<svg class="${d}" aria-labelledby="symbol-${c}-desc-${u}" role="group">`,`<desc id="symbol-${c}-desc-${u}">${g}</desc>`,`<use xlink:href="#svg-${c}"></use>`,"</svg>"].join("")})}}export{R as sprite};
